var background=function(){"use strict";var d,g;function w(e){return e==null||typeof e=="function"?{main:e}:e}const r=((g=(d=globalThis.browser)==null?void 0:d.runtime)==null?void 0:g.id)==null?globalThis.chrome:globalThis.browser,y=w(()=>{r.runtime.onMessage.addListener((e,a,i)=>{if(e.action==="getCookies")return r.cookies.getAll({url:a.tab.url},t=>{const f=t.map(s=>`${s.name}=${s.value}`).join("; ");i({cookie:f})}),!0;if(e.action==="sendRequest")return fetch(e.url).then(t=>t.text()).then(t=>{i({data:t})}).catch(t=>{i({error:t.message})}),!0;if(e.action==="setCookies"){const{origin:t,cookie:f}=e,s=a.tab;return s?(r.cookies.getAllCookieStores(P=>{const l=P.find(o=>o.tabIds.includes(s.id));if(!l){console.error("Cookie store not found"),i({success:!1});return}const v=f.split(";").map(o=>o.trim()).filter(o=>o).map(o=>{const n=o.indexOf("=");return n===-1?null:{name:o.slice(0,n).trim(),value:o.slice(n+1).trim()}}).filter(o=>o!==null),b={},I=v.map(({name:o,value:n})=>{const m=t.endsWith("/")?t:t+"/";return new Promise(h=>{r.cookies.get({name:o,url:m,storeId:l.id},async k=>{if(k){const{expirationDate:S,httpOnly:T,sameSite:x,secure:C,partitionKey:$}=k;Object.assign(b,{expirationDate:S,httpOnly:T,sameSite:x,secure:C,partitionKey:$}),await new Promise(O=>{r.cookies.remove({name:o,url:m,storeId:l.id},O)})}r.cookies.set({url:m,name:o,value:n,storeId:l.id,...b},()=>{r.runtime.lastError?(console.error(r.runtime.lastError),h(!1)):h(!0)})})})});Promise.all(I).then(o=>{const n=o.every(Boolean);i({success:n})})}),!0):(console.error("No tab information available"),i({success:!1}),!0)}})});function j(){}function c(e,...a){}const p={debug:(...e)=>c(console.debug,...e),log:(...e)=>c(console.log,...e),warn:(...e)=>c(console.warn,...e),error:(...e)=>c(console.error,...e)};let u;try{u=y.main(),u instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(e){throw p.error("The background crashed on startup!"),e}return u}();
background;
